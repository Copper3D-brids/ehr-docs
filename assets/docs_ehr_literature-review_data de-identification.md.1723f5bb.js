import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.b462f4d2.js";const p=JSON.parse('{"title":"Data de-identification workflow in DigitalTWINS platform","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ehr/literature-review/data de-identification.md","filePath":"docs/ehr/literature-review/data de-identification.md","lastUpdated":1759891238000}'),o={name:"docs/ehr/literature-review/data de-identification.md"},e=[l('<h1 id="data-de-identification-workflow-in-digitaltwins-platform" tabindex="-1">Data de-identification workflow in DigitalTWINS platform <a class="header-anchor" href="#data-de-identification-workflow-in-digitaltwins-platform" aria-label="Permalink to &quot;Data de-identification workflow in DigitalTWINS platform&quot;">​</a></h1><h2 id="uk-biobank-de-identification" tabindex="-1">UK biobank de-identification <a class="header-anchor" href="#uk-biobank-de-identification" aria-label="Permalink to &quot;UK biobank de-identification&quot;">​</a></h2><ul><li><p><a href="https://www.ukbiobank.ac.uk/media/5bvp0vqw/de-identification-protocol.pdf" target="_blank" rel="noreferrer">De-Identification protocol</a></p></li><li><p>Purpose: Ensures participant data released to researchers is de-identified to prevent inadvertent re-identification, while complying with legal and ethical obligations.</p></li><li><p>Data Types:</p><ul><li><p>Identifiable Data (not shared with researchers): Names, addresses, NHS numbers, contact details.</p></li><li><p>De-identified Data (shared with researchers): Phenotypes, genomic data, biomarkers, imaging, health records, and questionnaire responses.</p></li></ul></li><li><p>Data Management:</p><ul><li><p>Identifiable data is stored separately and encrypted, accessible only to authorized personnel.</p></li><li><p>A PID (unique identifier derived from NHS numbers) links datasets securely.</p></li><li><p>EID (project-specific encrypted identifier) replaces the PID in datasets shared with researchers.</p></li></ul></li></ul><p><img src="/ehr-docs/literature-review/data-de-identification/de-01.png" alt="image"></p><h2 id="hipaa-s-de-identification-methods" tabindex="-1">HIPAA’s De-Identification Methods <a class="header-anchor" href="#hipaa-s-de-identification-methods" aria-label="Permalink to &quot;HIPAA’s De-Identification Methods&quot;">​</a></h2><p>Under the U.S. Health Insurance Portability and Accountability Act (HIPAA), two methods are recognized:</p><ul><li><p>Safe Harbor Method:</p><ul><li><p>Requires removal of 18 specific identifiers, including:</p><ul><li><p>Names, addresses, phone numbers, email addresses.</p></li><li><p>Dates (e.g., birthdates, admission dates) except year.</p></li><li><p>Geographic subdivisions smaller than a state (e.g., full ZIP codes).</p></li><li><p>Social Security numbers, medical record numbers, health plan numbers.</p></li><li><p>Biometric identifiers (e.g., fingerprints), facial photos, unique device IDs.</p></li><li><p>Any remaining data is considered de-identified.</p></li></ul></li></ul></li><li><p>Expert Determination Method:</p><ul><li><p>A qualified expert statistically certifies that the risk of re-identification is &quot;very small.&quot;</p></li><li><p>Requires documentation of methods and results.</p></li></ul></li><li><p>Key Differences</p><ul><li><p>Date Handling:</p><ul><li><p>HIPAA Safe Harbor requires dates to be reduced to year only.</p></li><li><p>UK Biobank truncates birthdates to month and year, which would not comply with HIPAA Safe Harbor.</p></li></ul></li><li><p>Unique Identifiers:</p><ul><li>HIPAA prohibits sharing medical record numbers, while UK Biobank uses encrypted PIDs/EIDs (allowed under Expert Determination if risk is minimized).</li></ul></li><li><p>Genetic Data:</p><ul><li>HIPAA does not explicitly address genomic data risks, whereas UK Biobank acknowledges genetic re-identification risks but deems them low.</li></ul></li><li><p>Compliance Framework:</p><ul><li>HIPAA is legally mandated for U.S. entities; UK Biobank follows GDPR and contractual obligations (e.g., MTAs).</li></ul></li></ul></li></ul><h2 id="eucanshare" tabindex="-1">EUCanSHare <a class="header-anchor" href="#eucanshare" aria-label="Permalink to &quot;EUCanSHare&quot;">​</a></h2><p>EUCanSHare, a project focused on cardiovascular data sharing across Europe, employs a comprehensive strategy to handle de-identified data, balancing research utility with privacy protection. Here&#39;s a structured overview of their approach:</p><ul><li><p>De-identification Techniques:</p><ul><li><p>Pseudonymization: Primary method where direct identifiers (e.g., names, IDs) are replaced with codes. A secure, separate key is maintained by a trusted third party or data custodian, allowing re-identification only under strict conditions.</p></li><li><p>Anonymization: Pursued where feasible, ensuring data cannot be linked back to individuals (e.g., aggregation, removal of indirect identifiers). This aligns with GDPR standards for irreversible anonymization.</p></li></ul></li><li><p>Regulatory Compliance:</p><ul><li><p>GDPR Adherence: Ensures all processes meet EU data protection standards. Pseudonymized data is treated as personal data, requiring safeguards like access controls and encryption.</p></li><li><p>Ethical and Legal Frameworks: Collaborates with ethics boards to ensure compliance with regional regulations and study-specific consent terms.</p></li></ul></li><li><p>Data Governance and Access:</p><ul><li><p>Tiered Access Model:</p><ul><li><p>Open Access: Fully anonymized datasets available publicly.</p></li><li><p>Controlled Access: Pseudonymized data accessible via secure platforms, requiring ethical approval and data use agreements.</p></li></ul></li><li><p>Data Use Agreements: Prohibit re-identification attempts and mandate secure handling.</p></li></ul></li><li><p>Technical Safeguards:</p><ul><li><p>Secure Infrastructure: Uses encrypted storage and transfer (e.g., HTTPS, VPNs) on platforms like the European Genome-Phenome Archive (EGA).</p></li><li><p>Metadata Management: Removes or obscures indirect identifiers (e.g., dates, rare diagnoses) in metadata to prevent linkage attacks.</p></li></ul></li><li><p>Operational Protocols:</p><ul><li><p>Centralized De-identification: Standardized processes applied at data hubs to ensure consistency across diverse sources (cohorts, registries).</p></li><li><p>Provenance Tracking: Maintains records of data transformations to preserve integrity without compromising privacy.</p></li></ul></li><li><p>Ethical and Training Measures:</p><ul><li><p>Informed Consent: Ensures participant consent covers de-identified data sharing, with studies audited for compliance.</p></li><li><p>Researcher Training: Provides guidelines on ethical data handling, GDPR, and de-identification best practices.</p></li></ul></li><li><p>Risk Mitigation:</p><ul><li><p>Regular Audits: Monitors data access and usage to prevent breaches.</p></li><li><p>Re-identification Risk Assessments: Evaluates datasets for residual risks, applying additional anonymization if needed.</p></li></ul></li></ul><h2 id="de-identifying-fhir-patient-data-with-eucanshare" tabindex="-1">De-identifying FHIR Patient Data with EUCanSHare <a class="header-anchor" href="#de-identifying-fhir-patient-data-with-eucanshare" aria-label="Permalink to &quot;De-identifying FHIR Patient Data with EUCanSHare&quot;">​</a></h2><h3 id="scenario-fhir-data" tabindex="-1">Scenario - FHIR data <a class="header-anchor" href="#scenario-fhir-data" aria-label="Permalink to &quot;Scenario - FHIR data&quot;">​</a></h3><p>We have FHIR Patient resources stored on your server. We want to share de-identified data for research via EUCanSHare while complying with privacy standards.</p><ul><li><p>Identify Direct and Indirect Identifiers:</p><ul><li><p>Direct identifiers (must be pseudonymized or removed):</p><ul><li><p>Patient.id (internal system ID)</p></li><li><p>Patient.identifier (e.g., national ID, medical record number)</p></li><li><p>Patient.name</p></li><li><p>Patient.telecom (email/phone)</p></li><li><p>Patient.address</p></li><li><p>Patient.birthDate (if precise)</p></li></ul></li><li><p>Indirect identifiers (may require generalization/removal):</p><ul><li><p>Patient.gender</p></li><li><p>Patient.birthDate (year only)</p></li><li><p>Rare conditions (e.g., in Patient.extension or linked resources).</p></li></ul></li></ul></li><li><p>Apply De-identification Techniques:</p><ul><li>Original FHIR Patient Resource:</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;resourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Patient&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;12345&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;identifier&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;system&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;urn:oid:2.16.840.1.113883.4.1&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;value&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;SSN-987-65-4321&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;given&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">],</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;family&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Doe&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;telecom&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;system&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;phone&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;value&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;+1-555-123-4567&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;gender&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;male&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;birthDate&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1985-07-15&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;address&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;city&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Amsterdam&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;country&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Netherlands&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }]</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;resourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Patient&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;12345&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;identifier&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;system&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;urn:oid:2.16.840.1.113883.4.1&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;value&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;SSN-987-65-4321&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    }],</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;name&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;given&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">],</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;family&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Doe&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    }],</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;telecom&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;system&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;phone&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;value&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;+1-555-123-4567&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    }],</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;gender&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;male&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;birthDate&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1985-07-15&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;address&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;city&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Amsterdam&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;country&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Netherlands&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    }]</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><ul><li>De-identified FHIR Patient Resource:</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;resourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Patient&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pseud-9a8b7c6d&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Pseudonymized ID Patient.id: &quot;12345&quot; → &quot;pseud-9a8b7c6d&quot; (using a secure hashing algorithm like SHA-256 with a salt).</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;identifier&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;system&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;urn:oid:2.16.840.1.113883.4.1&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;value&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;pseud-a1b2c3d4&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// Pseudonymized SSN</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;gender&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;male&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;birthDate&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1985&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// Generalized to year only</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">&quot;address&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">&quot;country&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Netherlands&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// Retain country, remove city</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }]</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;resourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Patient&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pseud-9a8b7c6d&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Pseudonymized ID Patient.id: &quot;12345&quot; → &quot;pseud-9a8b7c6d&quot; (using a secure hashing algorithm like SHA-256 with a salt).</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;identifier&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;system&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;urn:oid:2.16.840.1.113883.4.1&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;value&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;pseud-a1b2c3d4&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// Pseudonymized SSN</span></span>\n<span class="line"><span style="color:#24292E;">    }],</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;gender&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;male&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;birthDate&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1985&quot;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// Generalized to year only</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">&quot;address&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">&quot;country&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Netherlands&quot;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// Retain country, remove city</span></span>\n<span class="line"><span style="color:#24292E;">    }]</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li><li><p>Code for de-identification via EUCanSHare</p></li></ul><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> json</span></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> hashlib</span></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> secrets</span></span>\n<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> datetime </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> datetime</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;"># Generate a secure salt (store this securely in production!)</span></span>\n<span class="line"><span style="color:#79B8FF;">SALT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> secrets.token_hex(</span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">pseudonymize</span><span style="color:#E1E4E8;">(value: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) -&gt; </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Pseudonymize a value using SHA-256 with salt&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> value:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> hashlib.sha256(</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{SALT}{</span><span style="color:#E1E4E8;">value</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">.encode()).hexdigest()[:</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">]</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">generalize_birthdate</span><span style="color:#E1E4E8;">(date_str: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) -&gt; </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Generalize birthdate to year only&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> datetime.strptime(date_str, </span><span style="color:#9ECBFF;">&quot;%Y-%m-</span><span style="color:#79B8FF;">%d</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">).strftime(</span><span style="color:#9ECBFF;">&quot;%Y&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">except</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># Handle invalid/missing dates</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">deidentify_patient</span><span style="color:#E1E4E8;">(patient_data: </span><span style="color:#79B8FF;">dict</span><span style="color:#E1E4E8;">) -&gt; </span><span style="color:#79B8FF;">dict</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;Main de-identification function for FHIR Patient resources&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">    deidentified </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;resourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Patient&quot;</span><span style="color:#E1E4E8;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Pseudonymize direct identifiers</span></span>\n<span class="line"><span style="color:#E1E4E8;">    deidentified[</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pseudonymize(patient_data.get(</span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Handle identifiers (e.g., SSN)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;identifier&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> patient_data:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        deidentified[</span><span style="color:#9ECBFF;">&quot;identifier&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;system&quot;</span><span style="color:#E1E4E8;">: ident[</span><span style="color:#9ECBFF;">&quot;system&quot;</span><span style="color:#E1E4E8;">],</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;">: pseudonymize(ident[</span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;">])</span></span>\n<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> ident </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> patient_data[</span><span style="color:#9ECBFF;">&quot;identifier&quot;</span><span style="color:#E1E4E8;">]]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Remove name and telecom completely</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> patient_data:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        deidentified[</span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [{</span><span style="color:#9ECBFF;">&quot;family&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;[REDACTED]&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;given&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;[REDACTED]&quot;</span><span style="color:#E1E4E8;">]}]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Generalize birthdate</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;birthDate&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> patient_data:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        deidentified[</span><span style="color:#9ECBFF;">&quot;birthDate&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> generalize_birthdate(patient_data[</span><span style="color:#9ECBFF;">&quot;birthDate&quot;</span><span style="color:#E1E4E8;">])</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Generalize address (keep country only)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;address&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> patient_data:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        deidentified[</span><span style="color:#9ECBFF;">&quot;address&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;country&quot;</span><span style="color:#E1E4E8;">: addr.get(</span><span style="color:#9ECBFF;">&quot;country&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">        } </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> addr </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> patient_data[</span><span style="color:#9ECBFF;">&quot;address&quot;</span><span style="color:#E1E4E8;">]]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Keep gender (low-risk)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    deidentified[</span><span style="color:#9ECBFF;">&quot;gender&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> patient_data.get(</span><span style="color:#9ECBFF;">&quot;gender&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;unknown&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> deidentified</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;"># Example Usage</span></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;__main__&quot;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Original FHIR Patient data</span></span>\n<span class="line"><span style="color:#E1E4E8;">    original_patient </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;resourceType&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Patient&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;id&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;12345&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;identifier&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;system&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;urn:oid:2.16.840.1.113883.4.1&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;SSN-987-65-4321&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;name&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;given&quot;</span><span style="color:#E1E4E8;">: [</span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">],</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;family&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Doe&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;telecom&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;system&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;phone&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;value&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;+1-555-123-4567&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }],</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;gender&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;male&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;birthDate&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;1985-07-15&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;address&quot;</span><span style="color:#E1E4E8;">: [{</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;city&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Amsterdam&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;country&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Netherlands&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">        }]</span></span>\n<span class="line"><span style="color:#E1E4E8;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># De-identify the patient</span></span>\n<span class="line"><span style="color:#E1E4E8;">    deidentified_patient </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> deidentify_patient(original_patient)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># Remove telecom completely</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;telecom&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> deidentified_patient:</span></span>\n<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">del</span><span style="color:#E1E4E8;"> deidentified_patient[</span><span style="color:#9ECBFF;">&quot;telecom&quot;</span><span style="color:#E1E4E8;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;De-identified Patient:&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(json.dumps(deidentified_patient, </span><span style="color:#FFAB70;">indent</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> json</span></span>\n<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> hashlib</span></span>\n<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> secrets</span></span>\n<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> datetime </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> datetime</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;"># Generate a secure salt (store this securely in production!)</span></span>\n<span class="line"><span style="color:#005CC5;">SALT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> secrets.token_hex(</span><span style="color:#005CC5;">16</span><span style="color:#24292E;">)</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">pseudonymize</span><span style="color:#24292E;">(value: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Pseudonymize a value using SHA-256 with salt&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> value:</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> hashlib.sha256(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{SALT}{</span><span style="color:#24292E;">value</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">.encode()).hexdigest()[:</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">]</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">generalize_birthdate</span><span style="color:#24292E;">(date_str: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Generalize birthdate to year only&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> datetime.strptime(date_str, </span><span style="color:#032F62;">&quot;%Y-%m-</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">).strftime(</span><span style="color:#032F62;">&quot;%Y&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">except</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">  </span><span style="color:#6A737D;"># Handle invalid/missing dates</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">deidentify_patient</span><span style="color:#24292E;">(patient_data: </span><span style="color:#005CC5;">dict</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">dict</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;Main de-identification function for FHIR Patient resources&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#24292E;">    deidentified </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;resourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Patient&quot;</span><span style="color:#24292E;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Pseudonymize direct identifiers</span></span>\n<span class="line"><span style="color:#24292E;">    deidentified[</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pseudonymize(patient_data.get(</span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Handle identifiers (e.g., SSN)</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;identifier&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> patient_data:</span></span>\n<span class="line"><span style="color:#24292E;">        deidentified[</span><span style="color:#032F62;">&quot;identifier&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">: ident[</span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">],</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;">: pseudonymize(ident[</span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;">])</span></span>\n<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> ident </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> patient_data[</span><span style="color:#032F62;">&quot;identifier&quot;</span><span style="color:#24292E;">]]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Remove name and telecom completely</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> patient_data:</span></span>\n<span class="line"><span style="color:#24292E;">        deidentified[</span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [{</span><span style="color:#032F62;">&quot;family&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;[REDACTED]&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;given&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;[REDACTED]&quot;</span><span style="color:#24292E;">]}]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Generalize birthdate</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;birthDate&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> patient_data:</span></span>\n<span class="line"><span style="color:#24292E;">        deidentified[</span><span style="color:#032F62;">&quot;birthDate&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> generalize_birthdate(patient_data[</span><span style="color:#032F62;">&quot;birthDate&quot;</span><span style="color:#24292E;">])</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Generalize address (keep country only)</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;address&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> patient_data:</span></span>\n<span class="line"><span style="color:#24292E;">        deidentified[</span><span style="color:#032F62;">&quot;address&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;country&quot;</span><span style="color:#24292E;">: addr.get(</span><span style="color:#032F62;">&quot;country&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">        } </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> addr </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> patient_data[</span><span style="color:#032F62;">&quot;address&quot;</span><span style="color:#24292E;">]]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Keep gender (low-risk)</span></span>\n<span class="line"><span style="color:#24292E;">    deidentified[</span><span style="color:#032F62;">&quot;gender&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> patient_data.get(</span><span style="color:#032F62;">&quot;gender&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;unknown&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> deidentified</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;"># Example Usage</span></span>\n<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Original FHIR Patient data</span></span>\n<span class="line"><span style="color:#24292E;">    original_patient </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;resourceType&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Patient&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;id&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;12345&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;identifier&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;urn:oid:2.16.840.1.113883.4.1&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;SSN-987-65-4321&quot;</span></span>\n<span class="line"><span style="color:#24292E;">        }],</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;name&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;given&quot;</span><span style="color:#24292E;">: [</span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">],</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;family&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Doe&quot;</span></span>\n<span class="line"><span style="color:#24292E;">        }],</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;telecom&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;system&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;phone&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;value&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;+1-555-123-4567&quot;</span></span>\n<span class="line"><span style="color:#24292E;">        }],</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;gender&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;male&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;birthDate&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;1985-07-15&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;address&quot;</span><span style="color:#24292E;">: [{</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;city&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Amsterdam&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;country&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Netherlands&quot;</span></span>\n<span class="line"><span style="color:#24292E;">        }]</span></span>\n<span class="line"><span style="color:#24292E;">    }</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># De-identify the patient</span></span>\n<span class="line"><span style="color:#24292E;">    deidentified_patient </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> deidentify_patient(original_patient)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># Remove telecom completely</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;telecom&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> deidentified_patient:</span></span>\n<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">del</span><span style="color:#24292E;"> deidentified_patient[</span><span style="color:#032F62;">&quot;telecom&quot;</span><span style="color:#24292E;">]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;De-identified Patient:&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(json.dumps(deidentified_patient, </span><span style="color:#E36209;">indent</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div><h2 id="de-identifying-dicom-data-with-hipaa" tabindex="-1">De-identifying Dicom Data with HIPAA <a class="header-anchor" href="#de-identifying-dicom-data-with-hipaa" aria-label="Permalink to &quot;De-identifying Dicom Data with HIPAA&quot;">​</a></h2><h3 id="scenario-dicom-data" tabindex="-1">Scenario - Dicom data <a class="header-anchor" href="#scenario-dicom-data" aria-label="Permalink to &quot;Scenario - Dicom data&quot;">​</a></h3><p>Now our dataset includes a series of dicom images that we need to de-identify them.</p><p>We can us e below code to do the de-identification based on HIPAA approach.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#9ECBFF;">anonymisation of DICOM files based on HIPAA standard</span></span>\n<span class="line"><span style="color:#9ECBFF;">primary packaged: dicomanonymizer: https://pypi.org/project/dicom-anonymizer/</span></span>\n<span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> json</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pydicom</span></span>\n<span class="line"><span style="color:#6A737D;"># from dicomanonymizer import anonymize, anonymizeDICOMFile, anonymizeDataset</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> dicomanonymizer </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> anonymizer</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">anon</span><span style="color:#E1E4E8;">(dcm, anon_id):</span></span>\n<span class="line"><span style="color:#E1E4E8;">   tags_replaced_by_anon_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0020</span><span style="color:#E1E4E8;">),  </span><span style="color:#6A737D;"># Patient ID</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># Patient Name</span></span>\n<span class="line"><span style="color:#E1E4E8;">   ]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> tag </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> tags_replaced_by_anon_id:</span></span>\n<span class="line"><span style="color:#E1E4E8;">       dcm[tag].value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> anon_id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> dcm</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">replace_by_anon_id</span><span style="color:#E1E4E8;">(dataset, tag):</span></span>\n<span class="line"><span style="color:#E1E4E8;">   element </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> dataset.get(tag)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> element </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">       element.value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> anon_id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;__main__&#39;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">   input_dicom_file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/path_to_input/original.dcm&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">   output_dicom_path </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;/path_to_output/anonymised.dcm&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">   anon_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;anon_0001&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   dcm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pydicom.read_file(input_dicom_file)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(dcm)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;patient id: &quot;</span><span style="color:#E1E4E8;">, dcm[(</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0020</span><span style="color:#E1E4E8;">)].value)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;patient name: &quot;</span><span style="color:#E1E4E8;">, dcm[(</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">)].value)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;original.json&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(dcm))</span></span>\n<span class="line"><span style="color:#E1E4E8;">   f.close()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;"># set custom rules</span></span>\n<span class="line"><span style="color:#E1E4E8;">   extra_rules </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   tags_to_keep </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">1010</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;"># Patient&#39;s Age</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">1030</span><span style="color:#E1E4E8;">), </span><span style="color:#6A737D;"># Patient&#39;s Weight</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">1020</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;"># Patient&#39;s Size</span></span>\n<span class="line"><span style="color:#E1E4E8;">   ]</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> tag </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> tags_to_keep:</span></span>\n<span class="line"><span style="color:#E1E4E8;">       extra_rules[tag] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> anonymizer.keep</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;"># for tag in anonymizer.ALL_TAGS:</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">#     extra_rules[tag] = anonymizer.keep</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   tags_replaced_by_anon_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0020</span><span style="color:#E1E4E8;">),  </span><span style="color:#6A737D;"># Patient ID</span></span>\n<span class="line"><span style="color:#E1E4E8;">       (</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">)  </span><span style="color:#6A737D;"># Patient Name</span></span>\n<span class="line"><span style="color:#E1E4E8;">   ]</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> tag </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> tags_replaced_by_anon_id:</span></span>\n<span class="line"><span style="color:#E1E4E8;">       extra_rules[tag] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> replace_by_anon_id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   anonymizer.anonymize(</span></span>\n<span class="line"><span style="color:#E1E4E8;">       input_dicom_file,</span></span>\n<span class="line"><span style="color:#E1E4E8;">       output_dicom_path,</span></span>\n<span class="line"><span style="color:#E1E4E8;">       extra_rules,</span></span>\n<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#FFAB70;">delete_private_tags</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">   )</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;--------------------------------------------------------------------------------------------------&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;anonymised!&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   dcm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pydicom.read_file(output_dicom_path)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(dcm)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;patient id: &quot;</span><span style="color:#E1E4E8;">, dcm[(</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0020</span><span style="color:#E1E4E8;">)].value)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;patient name: &quot;</span><span style="color:#E1E4E8;">, dcm[(</span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">0x</span><span style="color:#79B8FF;">0010</span><span style="color:#E1E4E8;">)].value)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   f </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">open</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;anonymised.json&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;w&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">   f.write(</span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(dcm))</span></span>\n<span class="line"><span style="color:#E1E4E8;">   f.close()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>\n<span class="line"><span style="color:#032F62;">anonymisation of DICOM files based on HIPAA standard</span></span>\n<span class="line"><span style="color:#032F62;">primary packaged: dicomanonymizer: https://pypi.org/project/dicom-anonymizer/</span></span>\n<span class="line"><span style="color:#032F62;">&quot;&quot;&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> json</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pydicom</span></span>\n<span class="line"><span style="color:#6A737D;"># from dicomanonymizer import anonymize, anonymizeDICOMFile, anonymizeDataset</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> dicomanonymizer </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> anonymizer</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">anon</span><span style="color:#24292E;">(dcm, anon_id):</span></span>\n<span class="line"><span style="color:#24292E;">   tags_replaced_by_anon_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0020</span><span style="color:#24292E;">),  </span><span style="color:#6A737D;"># Patient ID</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># Patient Name</span></span>\n<span class="line"><span style="color:#24292E;">   ]</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> tag </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> tags_replaced_by_anon_id:</span></span>\n<span class="line"><span style="color:#24292E;">       dcm[tag].value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> anon_id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> dcm</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">replace_by_anon_id</span><span style="color:#24292E;">(dataset, tag):</span></span>\n<span class="line"><span style="color:#24292E;">   element </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset.get(tag)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> element </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">       element.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> anon_id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;__main__&#39;</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">   input_dicom_file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/path_to_input/original.dcm&quot;</span></span>\n<span class="line"><span style="color:#24292E;">   output_dicom_path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;/path_to_output/anonymised.dcm&quot;</span></span>\n<span class="line"><span style="color:#24292E;">   anon_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;anon_0001&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   dcm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pydicom.read_file(input_dicom_file)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(dcm)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;patient id: &quot;</span><span style="color:#24292E;">, dcm[(</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0020</span><span style="color:#24292E;">)].value)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;patient name: &quot;</span><span style="color:#24292E;">, dcm[(</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">)].value)</span></span>\n<span class="line"><span style="color:#24292E;">   f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;original.json&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">   f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(dcm))</span></span>\n<span class="line"><span style="color:#24292E;">   f.close()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;"># set custom rules</span></span>\n<span class="line"><span style="color:#24292E;">   extra_rules </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   tags_to_keep </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">1010</span><span style="color:#24292E;">), </span><span style="color:#6A737D;"># Patient&#39;s Age</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">1030</span><span style="color:#24292E;">), </span><span style="color:#6A737D;"># Patient&#39;s Weight</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">1020</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># Patient&#39;s Size</span></span>\n<span class="line"><span style="color:#24292E;">   ]</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> tag </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> tags_to_keep:</span></span>\n<span class="line"><span style="color:#24292E;">       extra_rules[tag] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> anonymizer.keep</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;"># for tag in anonymizer.ALL_TAGS:</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">#     extra_rules[tag] = anonymizer.keep</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   tags_replaced_by_anon_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0020</span><span style="color:#24292E;">),  </span><span style="color:#6A737D;"># Patient ID</span></span>\n<span class="line"><span style="color:#24292E;">       (</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">)  </span><span style="color:#6A737D;"># Patient Name</span></span>\n<span class="line"><span style="color:#24292E;">   ]</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> tag </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> tags_replaced_by_anon_id:</span></span>\n<span class="line"><span style="color:#24292E;">       extra_rules[tag] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> replace_by_anon_id</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   anonymizer.anonymize(</span></span>\n<span class="line"><span style="color:#24292E;">       input_dicom_file,</span></span>\n<span class="line"><span style="color:#24292E;">       output_dicom_path,</span></span>\n<span class="line"><span style="color:#24292E;">       extra_rules,</span></span>\n<span class="line"><span style="color:#24292E;">       </span><span style="color:#E36209;">delete_private_tags</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">   )</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;--------------------------------------------------------------------------------------------------&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;anonymised!&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">   dcm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pydicom.read_file(output_dicom_path)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(dcm)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;patient id: &quot;</span><span style="color:#24292E;">, dcm[(</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0020</span><span style="color:#24292E;">)].value)</span></span>\n<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;patient name: &quot;</span><span style="color:#24292E;">, dcm[(</span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">0x</span><span style="color:#005CC5;">0010</span><span style="color:#24292E;">)].value)</span></span>\n<span class="line"><span style="color:#24292E;">   f </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;anonymised.json&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;w&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">   f.write(</span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(dcm))</span></span>\n<span class="line"><span style="color:#24292E;">   f.close()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div><h2 id="create-sparc-dataset-for-de-identify-data" tabindex="-1">Create SPARC dataset for de-identify data <a class="header-anchor" href="#create-sparc-dataset-for-de-identify-data" aria-label="Permalink to &quot;Create SPARC dataset for de-identify data&quot;">​</a></h2><p>Once we finish the FHIR or dicom data de-identification, we can use <a href="https://github.com/SPARC-FAIR-Codeathon/sparc-me" target="_blank" rel="noreferrer">sparc-me</a> to create the SPARC dataset.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> sparc_me </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> sm</span></span>\n<span class="line"><span style="color:#E1E4E8;">save_dir </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./tmp/template/&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">dataset </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sm.Dataset()</span></span>\n<span class="line"><span style="color:#E1E4E8;">dataset.set_path(save_dir)</span></span>\n<span class="line"><span style="color:#E1E4E8;">dataset.create_empty_dataset(</span><span style="color:#FFAB70;">version</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;2.0.0&#39;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">subjects </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>\n<span class="line"><span style="color:#E1E4E8;">samples </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">sample1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sm.Sample()</span></span>\n<span class="line"><span style="color:#E1E4E8;">sample1.add_path(</span><span style="color:#9ECBFF;">&quot;./test_data/bids_data/sub-01/sequence1/&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">sample1.add_path([</span><span style="color:#9ECBFF;">&quot;./test_data/sample2/raw/dummy_sam2.txt&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;./test_data/sample1/raw/dummy_sam1.txt&quot;</span><span style="color:#E1E4E8;">])</span></span>\n<span class="line"><span style="color:#E1E4E8;">samples.append(sample1)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">sample2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sm.Sample()</span></span>\n<span class="line"><span style="color:#E1E4E8;">sample2.add_path(</span><span style="color:#9ECBFF;">&quot;./test_data/bids_data/sub-01/sequence2/&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"><span style="color:#E1E4E8;">samples.append(sample2)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">subject1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> sm.Subject()</span></span>\n<span class="line"><span style="color:#E1E4E8;">subject1.add_samples(samples)</span></span>\n<span class="line"><span style="color:#E1E4E8;">subjects.append(subject1)</span></span>\n<span class="line"><span style="color:#E1E4E8;">dataset.add_subjects(subjects)</span></span>\n<span class="line"><span style="color:#E1E4E8;">dataset.save()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> sparc_me </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> sm</span></span>\n<span class="line"><span style="color:#24292E;">save_dir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./tmp/template/&quot;</span></span>\n<span class="line"><span style="color:#24292E;">dataset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sm.Dataset()</span></span>\n<span class="line"><span style="color:#24292E;">dataset.set_path(save_dir)</span></span>\n<span class="line"><span style="color:#24292E;">dataset.create_empty_dataset(</span><span style="color:#E36209;">version</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;2.0.0&#39;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">subjects </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>\n<span class="line"><span style="color:#24292E;">samples </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">sample1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sm.Sample()</span></span>\n<span class="line"><span style="color:#24292E;">sample1.add_path(</span><span style="color:#032F62;">&quot;./test_data/bids_data/sub-01/sequence1/&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">sample1.add_path([</span><span style="color:#032F62;">&quot;./test_data/sample2/raw/dummy_sam2.txt&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;./test_data/sample1/raw/dummy_sam1.txt&quot;</span><span style="color:#24292E;">])</span></span>\n<span class="line"><span style="color:#24292E;">samples.append(sample1)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">sample2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sm.Sample()</span></span>\n<span class="line"><span style="color:#24292E;">sample2.add_path(</span><span style="color:#032F62;">&quot;./test_data/bids_data/sub-01/sequence2/&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"><span style="color:#24292E;">samples.append(sample2)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">subject1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sm.Subject()</span></span>\n<span class="line"><span style="color:#24292E;">subject1.add_samples(samples)</span></span>\n<span class="line"><span style="color:#24292E;">subjects.append(subject1)</span></span>\n<span class="line"><span style="color:#24292E;">dataset.add_subjects(subjects)</span></span>\n<span class="line"><span style="color:#24292E;">dataset.save()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>For more information, you can read <a href="https://github.com/SPARC-FAIR-Codeathon/sparc-me?tab=readme-ov-file#using-sparc-me" target="_blank" rel="noreferrer">sparc-me documentation and tutorials</a></p><h2 id="upload-dataset-to-digitaltwins-platform" tabindex="-1">Upload dataset to DigitalTwins platform <a class="header-anchor" href="#upload-dataset-to-digitaltwins-platform" aria-label="Permalink to &quot;Upload dataset to DigitalTwins platform&quot;">​</a></h2><p>We can use <a href="https://github.com/ABI-CTT-Group/digitaltwins-api" target="_blank" rel="noreferrer">digitaltwins-api</a> package to upload the dataset.</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> digitaltwins </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Uploader</span></span>\n<span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pathlib </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Path</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__name__</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;__main__&#39;</span><span style="color:#E1E4E8;">:</span></span>\n<span class="line"><span style="color:#E1E4E8;">    dataset_dir </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Path(</span><span style="color:#F97583;">r</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#DBEDFF;">/path/to/dataset_dir</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    uploader </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Uploader(Path(</span><span style="color:#F97583;">r</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#DBEDFF;">/path/to/configs</span><span style="color:#79B8FF;">.</span><span style="color:#DBEDFF;">ini</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">    uploader.upload(</span><span style="color:#FFAB70;">dataset_dir</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">dataset_dir)</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;done&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> digitaltwins </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Uploader</span></span>\n<span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pathlib </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Path</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;__main__&#39;</span><span style="color:#24292E;">:</span></span>\n<span class="line"><span style="color:#24292E;">    dataset_dir </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Path(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;/path/to/dataset_dir&quot;</span><span style="color:#24292E;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    uploader </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Uploader(Path(</span><span style="color:#D73A49;">r</span><span style="color:#032F62;">&quot;/path/to/configs</span><span style="color:#005CC5;">.</span><span style="color:#032F62;">ini&quot;</span><span style="color:#24292E;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">    uploader.upload(</span><span style="color:#E36209;">dataset_dir</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">dataset_dir)</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;done&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>For more information, you can read the <a href="https://github.com/ABI-CTT-Group/digitaltwins-api/tree/main?tab=readme-ov-file#introduction" target="_blank" rel="noreferrer">digitaltwins-api documentation</a></p>',28)];const t=s(o,[["render",function(s,l,p,o,t,r){return n(),a("div",null,e)}]]);export{p as __pageData,t as default};
